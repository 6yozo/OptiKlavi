<Project Sdk="Uno.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net8.0-desktop</TargetFrameworks>

    <OutputType>Exe</OutputType>
    <UnoSingleProject>true</UnoSingleProject>

    <!-- This is used by the code generated by flatc -->
    <DefineConstants>ENABLE_SPAN_T</DefineConstants>

    <!-- Display name -->
    <ApplicationTitle>OptiKlavi.UI</ApplicationTitle>
    <!-- App Identifier -->
    <ApplicationId>com.companyname.optiklavi-ui</ApplicationId>
    <!-- Versions -->
    <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
    <ApplicationVersion>1</ApplicationVersion>
    <!-- Package Publisher -->
    <ApplicationPublisher>OptiKlavi.UI</ApplicationPublisher>
    <!-- Package Description -->
    <Description>OptiKlavi.UI powered by Uno Platform.</Description>

    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

    <!-- Build into the base folder -->
    <BaseOutputPath>../../../bin/</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)$(Configuration)/</OutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>

    <!--
      UnoFeatures let's you quickly add and manage implicit package references based on the features you want to use.
      https://aka.platform.uno/singleproject-features
    -->
    <UnoFeatures>
    </UnoFeatures>
    <Configurations>Debug;Release</Configurations>
    <Platforms>AnyCPU;Linux Any CPU;WINDOWS Any CPU;LINUX Any CPU</Platforms>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="..\..\..\schemas\frequency_map.fbs">
      <Link>schemas\frequency_map.fbs</Link>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\..\schemas\generated\cs\OptiKlavi\FrequencyMap\FrequencyMap.cs">
      <Link>schemas\generated\cs\OptiKlavi\FrequencyMap\FrequencyMap.cs</Link>
    </Compile>
    <Compile Include="..\..\..\schemas\generated\cs\OptiKlavi\FrequencyMap\KeyValue.cs">
      <Link>schemas\generated\cs\OptiKlavi\FrequencyMap\KeyValue.cs</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\cmake-build-debug\_deps\flatbuffers-src\net\FlatBuffers\Google.FlatBuffers.csproj" />
  </ItemGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|LINUX Any CPU'">
      <DefineConstants>$(DefineConstants);LINUX</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|OSX Any CPU'">
      <DefineConstants>$(DefineConstants);OSX</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|WINDOWS Any CPU'">
      <DefineConstants>$(DefineConstants);WINDOWS</DefineConstants>
    </PropertyGroup>

  <!-- Copy native DLL into the Output Directory  Condition="'$(RuntimeIdentifier)' == 'linux-x64'"-->
  <Target Name="CopyNativeDll" AfterTargets="Build">
    <Copy Condition="'$(Configuration)|$(Platform)' == 'Debug|WINDOWS Any CPU'"
          SourceFiles="../../../cmake-build-debug/native/OptiKlavi.dll"
          DestinationFolder="$(OutputPath)" />
    <Copy Condition="'$(Configuration)|$(Platform)' == 'Debug|WINDOWS Any CPU'"
          SourceFiles="../../../cmake-build-debug/native/OptiKlavi.pdb"
          DestinationFolder="$(OutputPath)" />

    <Copy  Condition="'$(Configuration)|$(Platform)' == 'Debug|LINUX Any CPU'"
          SourceFiles="../../../cmake-build-debug/native/libOptiKlavi.so"
          DestinationFolder="$(OutputPath)" />
  </Target>

  <Target Name="DisplayOutputPath">
    <Message Text="Output Path: $(OutputPath)" Importance="high" />
  </Target>
</Project>
